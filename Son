 
 EntityFramework indir
 
 //-------------------------------------------------------------------
 public class Kategori
    {
        public int KategoriId { get; set; }
        public string KategoriAdi { get; set; }
        public List<Urun> uruns{ get; set; }

    }

//--------------------------------------------------------------------
public class Satis
    {
        public int SatisId { get; set; }
        public int SatisAdeti { get; set; }
        public decimal ToplamFiyat { get; set; }
        public int UrunId { get; set; }
        public Urun Urun { get; set; }  

    }
//------------------------------------------------------------------------

public class Urun
    {
        public int UrunId { get; set; }
        public string UrunAd { get; set; }
        public int UrunStok{ get; set; }
        public decimal UrunFiyat{ get; set; }        
        public int KategoriId{ get; set; }
        public Kategori Kategori { get; set; }
        public List<Satis> Satis { get; set; }

    }
//---------------------------------------------------------------------

public class Context : DbContext
    {
        public Context() : base("connection") { }
        public DbSet<Kategori> kategoris { get; set; }
        public DbSet<Urun> uruns { get; set; }
        public DbSet<Satis> Satis{ get; set; }

    }


//----------------------------------------------------------------------
<connectionStrings>
<add name = "connection" connectionString="server=.;database=SinavDb;integrated security=true;" 
providerName="System.Data.SqlClient"/>
</connectionStrings>

Data Source=11.11.9.12,1433;User Id=sa;Password=1234; Initial Catalog = SinavDb;Trusted_Connection=False;
//-----------------------------------------------------------

<connectionStrings>
<add name = "Baglanti" connectionString="Data Source=(localdb)\MSSQLLocalDB;Initial Catalog=master;Integrated Security=True;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False;ApplicationIntent=ReadWrite;MultiSubnetFailover=False"
providerName="System.Data.SqlClient"/>
</connectionStrings>
//-----------------------------------------------------------

Enable-Migrations 
Add-migration deneme 
Update-database 
//--------------------------------------------------------------------
public Configuration() 

 { 

 AutomaticMigrationsEnabled = true; 

 } 


//---------------------------------------------------------------------
using Sinav.Entity;
using System;
using System.Collections.Generic;
using System.Data.Entity.Migrations;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Sinav
{
    internal class Program
    {
        static void Main(string[] args)
        {
            var _context = new Context();
            var kategori=new Kategori();
            var urun = new  Urun(); 
            var satis=new Satis();
            X:
            Console.Clear();
           
            Console.WriteLine("Satış Takip Programı");
            Console.WriteLine("");
            Console.WriteLine("Ana Menü");
            Console.WriteLine("---------------------");
            Console.WriteLine("Kategori Listele  [1]");
            Console.WriteLine("Kategori Ekle     [2]");
            Console.WriteLine("Kategori Güncelle [3]");
            Console.WriteLine("Kategori Sil      [4]");
            Console.WriteLine("----------------------");
            Console.WriteLine("Ürün Listele      [5]");
            Console.WriteLine("Ürün Ekle         [6]");
            Console.WriteLine("Ürün Güncelle     [7]");
            Console.WriteLine("Ürün Sil          [8]");
            Console.WriteLine("----------------------");
            Console.WriteLine("Satış Listele     [9]");
            Console.WriteLine("Satış Ekle        [10]");
            Console.WriteLine("----------------------");
            Console.WriteLine("ÇIKIŞ             [0]");
            Console.WriteLine("");
            Console.WriteLine("Seçiminizi Belirtiniz!");
            int Secim = Convert.ToInt16(Console.ReadLine());
            Console.Clear();

            switch(Secim)
            {
                case 1:
                    Console.WriteLine("----Kategoriler----");
                    Console.WriteLine("");
                    foreach (var item in _context.kategoris)
                    {   
                        Console.WriteLine(item.KategoriId + ")" + item.KategoriAdi);
                    }
                    Console.ReadKey();
                    goto X;

                case 2:
                    Console.WriteLine("Kategori Ekleme Ekranı");
                    Console.WriteLine("Kategori Adını Giriniz");
                    kategori.KategoriAdi= Console.ReadLine();
                    _context.kategoris.Add(kategori);
                    _context.SaveChanges();
                    Console.WriteLine("Kategori Eklendi");
                    Console.ReadKey();
                    goto X;

                case 3:
                    Console.WriteLine("Kategori Güncelleme Ekranı");
                    Console.WriteLine("Güncellenecek Kategorinin Id'sini giriniz:");
                    kategori.KategoriId=Convert.ToInt16(Console.ReadLine());
                    kategori.KategoriAdi= Console.ReadLine();
                    _context.kategoris.AddOrUpdate(kategori);
                    _context.SaveChanges();
                    Console.WriteLine("Kategori Güncellendi");
                    Console.ReadKey();
                    goto X;

                case 4:
                    Console.WriteLine("Kategori Silme Ekranı");
                    Console.WriteLine("Silinecek Kategorinin Id'sini giriniz:");
                    int b =Convert.ToInt16(Console.ReadLine()) ;
                    var sil = _context.kategoris.Find(b);
                    _context.kategoris.Remove(sil);
                    _context.SaveChanges();
                    Console.WriteLine("Kategori Silindi");
                    Console.ReadKey();
                    goto X;

                case 5:
                    Console.WriteLine("------Ürünler------");
                    Console.WriteLine("");
                    foreach (var item in _context.uruns)
                    {
                        Console.WriteLine(item.UrunId + ") " + item.UrunAd + " Stok: " + item.UrunStok + " Ürün Fiyat: " + item.UrunFiyat + " Kategori Id: " + item.KategoriId );
                    }
                    Console.ReadKey();
                    goto X;

                case 6:
                    Console.WriteLine("Ürün Ekleme Ekranı");
                    Console.WriteLine("Ürün Adını Giriniz");
                    urun.UrunAd= Console.ReadLine();
                    Console.WriteLine("Ürün Stoğunu Giriniz");
                    urun.UrunStok = Convert.ToInt32(Console.ReadLine()) ;
                    Console.WriteLine("Ürün Fiyatını Giriniz");
                    urun.UrunFiyat = Convert.ToDecimal(Console.ReadLine());
                    Console.WriteLine("Kategori Id'sini Giriniz");
                    urun.KategoriId= Convert.ToInt32(Console.ReadLine());
                    _context.uruns.Add(urun);
                    _context.SaveChanges();
                    Console.WriteLine("Ürün Eklendi");
                    Console.ReadKey();
                    goto X;

                case 7:

                    Console.WriteLine("Ürün Güncelleme Ekranı");
                    Console.WriteLine("Güncellenecek Ürünün Id'sini giriniz:");
                    urun.UrunId= Convert.ToInt16(Console.ReadLine());
                    urun.UrunAd = Console.ReadLine();
                    Console.WriteLine("Ürün Stoğunu Giriniz");
                    urun.UrunStok = Convert.ToInt32(Console.ReadLine());
                    Console.WriteLine("Ürün Fiyatını Giriniz");
                    urun.UrunFiyat = Convert.ToDecimal(Console.ReadLine());
                    Console.WriteLine("Kategori Id'sini Giriniz");
                    urun.KategoriId = Convert.ToInt32(Console.ReadLine());
                    _context.uruns.AddOrUpdate(urun);
                    _context.SaveChanges();
                     Console.WriteLine("Ürün Güncellendi");
                    Console.ReadKey();
                    goto X;


                 case 8:
                    Console.WriteLine("Ürün Silme Ekranı");
                    Console.WriteLine("Silinecek Ürünün Id'sini giriniz:");
                    int a=Convert.ToInt32(Console.ReadLine());
                    var silu = _context.uruns.Find(a);
                    _context.uruns.Remove(silu);
                    _context.SaveChanges();
                    Console.WriteLine("Ürün Silindi");
                    Console.ReadKey();
                    goto X;

                 case 9:
                    Console.WriteLine("------Satışlar------");
                    Console.WriteLine("");
                    foreach (var item in _context.Satis)
                    {
                        Console.WriteLine(item.SatisId + ") " + "Satış Adeti: " + item.SatisAdeti + " Toplam Fiyat: " + item.ToplamFiyat);
                    }
                    Console.ReadKey();
                    goto X;

                case 10:
                    Console.WriteLine("Satış Ekleme Ekranı");
                    Console.WriteLine("Ürün Id Giriniz");
                    satis.UrunId = Convert.ToInt32(Console.ReadLine());
                    Console.WriteLine("Satış Adetini Giriniz");
                    satis.SatisAdeti= Convert.ToInt32(Console.ReadLine());
                    var urunb = _context.uruns.Find(satis.UrunId);
                    satis.ToplamFiyat = satis.SatisAdeti * urunb.UrunFiyat;
                    urun.UrunStok = urunb.UrunStok -satis.SatisAdeti;
                    _context.Satis.Add(satis);
                    _context.SaveChanges();
                    Console.WriteLine("Satış Eklendi");
                    Console.ReadKey();
                    goto X;

                case 0:
                    break;
                default:
                    goto X;

            }


        }
    }
}
